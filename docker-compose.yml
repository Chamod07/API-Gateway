version: '3.9'

services:
  api-gateway:
    image: api-gateway:latest
    container_name: api-gateway
    build:
      context: .
      dockerfile: ./api-gateway/Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      customer-service:
        condition: service_healthy
      order-service:
        condition: service_healthy
      product-service:
        condition: service_healthy
    environment:
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - apigateway-network

  customer-service:
    image: customer-service:latest
    container_name: customer-service
    build:
      context: .
      dockerfile: ./customer-service/Dockerfile
    ports:
      - "8081:8081"
    environment:
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - apigateway-network

  order-service:
    image: order-service:latest
    container_name: order-service
    build:
      context: .
      dockerfile: ./order-service/Dockerfile
    ports:
      - "8082:8082"
    environment:
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - apigateway-network

  product-service:
    image: product-service:latest
    container_name: product-service
    build:
      context: .
      dockerfile: ./product-service/Dockerfile
    ports:
      - "8083:8083"
    environment:
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - apigateway-network

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - apigateway-network
    volumes:
      - redis-data:/data

networks:
  apigateway-network:
    driver: bridge

volumes:
  redis-data: